import { reply } from 'alice-renderer';
import { Component } from '../Component';
import { NextFilterOrEvent } from '../Utils/NextFilterOrEvent';

export class OnlyFree extends Component {
  nextComponent = NextFilterOrEvent;

  match() {
    return this.matchRegexp([
      /–±–µ—Å–ø–ª–∞—Ç–Ω/,
      /—Ö–∞–ª—è–≤[–∞—É]/,
    ]);
  }

  async handle() {
    this.ctx.filter.data.free = true;
  }

  reply() {
    return reply`
      ${this.getMsg()}
    `;
  }

  getMsg() {
    return [
      '–ù—É –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ú–æ–∂–Ω–æ –±—É–¥–µ—Ç –∫—É–ø–∏—Ç—å –º–æ—Ä–æ–∂–µ–Ω–Ω–æ–µ! üç¶',
      '–û—Ç–ª–∏—á–Ω–æ! –í–∞–º –∂–µ –±–æ–ª—å—à–µ –¥–æ—Å—Ç–∞–Ω–µ—Ç—Å—è!',
      '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é! –Ø —Ç–æ–∂–µ –ª—é–±–ª—é —Ö–∞–ª—è–≤—É ‚ò∫Ô∏è',
      '–ó–¥–æ—Ä–æ–≤–æ! –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ç–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥! ‚ò∫Ô∏è',
    ];
  }
}
