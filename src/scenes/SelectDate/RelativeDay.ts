import { reply } from 'alice-renderer';
import { Component } from '../Component';
import { NextFilterOrEvent } from '../Utils/NextFilterOrEvent';
import { getDateRange } from './helpers';

const dayOffsetRegexp = {
  '2': /–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞/,
  '1': /–∑–∞–≤—Ç—Ä–∞/, // –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã "–∑–∞–≤—Ç—Ä–∞" –ø—Ä–æ–≤–µ—Ä—è–ª–æ—Å—å –ø–æ—Å–ª–µ "–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞"
  '0': /—Å–µ–≥–æ–¥–Ω—è/,
};

export class RelativeDay extends Component {
  nextComponent = NextFilterOrEvent;

  dayOffset!: number;

  match() {
    for (const [ dayOffset, regexp ] of Object.entries(dayOffsetRegexp)) {
      if (this.matchRegexp(regexp)) {
        this.dayOffset = Number(dayOffset);
        return true;
      }
    }
  }

  async handle() {
    this.ctx.filter.data.dateRange = getDateRange(this.dayOffset, this.dayOffset + 1);
  }

  reply() {
    return reply`
      üí™
      ${dayOffsetReplies[this.dayOffset]}
    `;
  }
}

const dayOffsetReplies: Record<string, string> = {
  '2': '',
  '1': '–•–æ—Ä–æ—à–µ–µ –¥–µ–ª–æ –Ω–µ–ª—å–∑—è –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å!',
  '0': '–ü—Ä–∞–≤–∏–ª—å–Ω–æ, –¥–µ–π—Å—Ç–≤—É–µ–º –∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å!',
};
